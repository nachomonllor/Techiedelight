/*

Given two sorted integer arrays, `X[]` and `Y[]` of size `m` and `n` each, in-place merge elements of `X[]` with elements of array `Y[]` by maintaining the sorted order, i.e., fill `X[]` with the first `m` smallest elements and fill `Y[]` with remaining elements.

Input :

X[] = [1, 4, 7, 8, 10]
Y[] = [2, 3, 9]

Output:

X[] = [1, 2, 3, 4, 7]
Y[] = [8, 9, 10]

*/

class Solution
{
	public static void merge(int[] X, int[] Y)
	{
		int i = 0, j = 0;
		int[] aux = new int[X.length + Y.length];
		int k = 0;
		while(i < X.length && j < Y.length) {
			
			if(X[i] <= Y[j]) {
				aux[k++] = X[i++];
			}
			else {
				aux[k++] = Y[j++];
			}
			
		}
		
		while(i < X.length) {
			aux[k++] = X[i++];
		}
		
		while(j < Y.length) {
			aux[k++] = Y[j++];
		}
		
		int index = 0;
		for( i = 0; i < X.length; i++) {
			X[i] = aux[index++]; 
		}
		
		for(i = 0; i < Y.length; i++) {
			Y[i] = aux[index++];
		}
	}
}
