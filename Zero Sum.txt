
https://techiedelight.com/practice/?problem=ZeroSum

/*
Given an integer array, check if it contains a contiguous subarray having zero-sum.
Input : [3, 4, -7, 3, 1, 3, 1, -4, -2, -2]
Output: true
Explanation: The subarrays with zero-sum are

[3, 4, -7]
[4, -7, 3]
[-7, 3, 1, 3]
[3, 1, -4]
[3, 1, 3, 1, -4, -2, -2]
[3, 4, -7, 3, 1, 3, 1, -4, -2, -2]

Input : [4, -7, 1, -2, -1]
Output: false
Explanation: The subarray with zero-sum doesn't exist.

*/

class Solution
{
public:
	bool hasZeroSumSubarray(vector<int> const &nums)
	{
		set<int> hash;
	 	int suma = 0;
	 	
	 	for(int i = 0; i < nums.size(); i++) {
	 		
			/*
			La suma es cero si:
			1. El elemento actual del array es 0
			2. La suma desde el indice 0 hasta el indice i es 0
			3. El hash ya contiene a la suma
			*/
	 		suma += nums[i];
	 		if(nums[i] == 0 || suma == 0 || hash.find(suma) != hash.end()) {
	 		   return true;	
			}
			hash.insert(suma);
		}
	 	
	 	return false;
	}
};
