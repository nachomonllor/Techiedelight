
https://techiedelight.com/practice/?problem=FirstAndLastOccurrence

/*

Given a sorted integer array, find the index of a given number's first and last occurrence.

Input: nums[] = [2, 5, 5, 5, 6, 6, 8, 9, 9, 9], target = 5
Output: (1, 3)
Explanation: The first and last occurrence of element 5 is located at index 1 and 3, respectively.

â€¢ If the target is not present in the array, the solution should return the pair (-1, -1).

Input: nums[] = [2, 5, 5, 5, 6, 6, 8, 9, 9, 9], target = 4
Output: (-1, -1)

*/

class Solution
{
public:
	pair<int,int> findPair(vector<int> const &nums, int target)
	{
		
		pair<int,int> res = make_pair(-1, -1);
		bool flag = false;
		
		for(int i = 0; i < nums.size(); i++) {
			
			if(!flag) {
				if(nums[i] == target) {
					res.first = i;
					res.second = i;
					flag = true;
				}
			}
			else 
			{
				if(nums[i] == target) {
					res.second = i;
				}
			}
		}
		
		return res;
		
	}
};
